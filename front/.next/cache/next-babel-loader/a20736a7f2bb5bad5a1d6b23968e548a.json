{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(addPost),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddPost),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(postSaga);\n\nimport { all, call, fork, put, takeLatest } from \"@redux-saga/core/effects\";\n\nfunction addPostAPI(data) {// return axios.post('/api/post', data);\n}\n\nfunction addPost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function addPost$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(addPostAPI, action.data);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: \"LOG_OUT_SUCCESS\",\n            data: result.data\n          });\n\n        case 6:\n          _context.next = 12;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 12;\n          return put({\n            type: \"LOG_OUT_FAILURE\",\n            data: _context.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction watchAddPost() {\n  return _regeneratorRuntime.wrap(function watchAddPost$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(\"ADD_POST_REQUEST\", addPost);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nexport default function postSaga() {\n  return _regeneratorRuntime.wrap(function postSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([fork(watchAddPost)]);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["/Users/seonghun/공부/웹/Nextjs/niselj/front/sagas/post.js"],"names":["addPost","watchAddPost","postSaga","all","call","fork","put","takeLatest","addPostAPI","data","action","result","type","response"],"mappings":";;oDAMUA,O;qDAeAC,Y;qDAIeC,Q;;AAzBzB,SAASC,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,UAA/B,QAAiD,0BAAjD;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAA0B,CACxB;AACD;;AAED,SAAUT,OAAV,CAAkBU,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEmB,iBAAMN,IAAI,CAACI,UAAD,EAAaE,MAAM,CAACD,IAApB,CAAV;;AAFnB;AAEUE,UAAAA,MAFV;AAAA;AAGI,iBAAML,GAAG,CAAC;AACRM,YAAAA,IAAI,EAAE,iBADE;AAERH,YAAAA,IAAI,EAAEE,MAAM,CAACF;AAFL,WAAD,CAAT;;AAHJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAQI,iBAAMH,GAAG,CAAC;AACRM,YAAAA,IAAI,EAAE,iBADE;AAERH,YAAAA,IAAI,EAAE,YAAII,QAAJ,CAAaJ;AAFX,WAAD,CAAT;;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAeA,SAAUR,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMM,UAAU,CAAC,kBAAD,EAAqBP,OAArB,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAe,SAAUE,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMC,GAAG,CAAC,CAACE,IAAI,CAACJ,YAAD,CAAL,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, call, fork, put, takeLatest } from \"@redux-saga/core/effects\";\n\nfunction addPostAPI(data) {\n  // return axios.post('/api/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: \"LOG_OUT_SUCCESS\",\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: \"LOG_OUT_FAILURE\",\n      data: err.response.data,\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(\"ADD_POST_REQUEST\", addPost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost)]);\n}\n"]},"metadata":{},"sourceType":"module"}