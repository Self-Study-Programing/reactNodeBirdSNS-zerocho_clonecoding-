{"ast":null,"code":"import { createWrapper } from \"next-redux-wrapper\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport rootReducer from \"../reducers\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst loggerMiddleware = ({\n  dispatch,\n  getState\n}) => next => action => {\n  console.log(action);\n  return next(action);\n};\n\nconst configureStore = () => {\n  const middlewares = [thunkMiddleware, loggerMiddleware];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) // devtool 연결 X\n  : composeWithDevTools(applyMiddleware(...middlewares)); // devtool 연결\n\n  const store = createStore(rootReducer, enhancer);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["/Users/seonghun/공부/웹/Nextjs/niselj/front/store/configureStore.js"],"names":["createWrapper","applyMiddleware","compose","createStore","thunkMiddleware","rootReducer","composeWithDevTools","loggerMiddleware","dispatch","getState","next","action","console","log","configureStore","middlewares","enhancer","store","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,SAASC,mBAAT,QAAoC,0BAApC;;AAEA,MAAMC,gBAAgB,GACpB,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KACCC,IAAD,IACCC,MAAD,IAAY;AACVC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,SAAOD,IAAI,CAACC,MAAD,CAAX;AACD,CANH;;AAQA,MAAMG,cAAc,GAAG,MAAM;AAC3B,QAAMC,WAAW,GAAG,CAACX,eAAD,EAAkBG,gBAAlB,CAApB;AACA,QAAMS,QAAQ,GACZ,QACId,OAAO,CAACD,eAAe,CAAC,GAAGc,WAAJ,CAAhB,CADX,CAC6C;AAD7C,IAEIT,mBAAmB,CAACL,eAAe,CAAC,GAAGc,WAAJ,CAAhB,CAHzB,CAF2B,CAKiC;;AAE5D,QAAME,KAAK,GAAGd,WAAW,CAACE,WAAD,EAAcW,QAAd,CAAzB;AACA,SAAOC,KAAP;AACD,CATD;;AAWA,MAAMC,OAAO,GAAGlB,aAAa,CAACc,cAAD,EAAiB;AAC5CK,EAAAA,KAAK;AADuC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import { createWrapper } from \"next-redux-wrapper\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport rootReducer from \"../reducers\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst loggerMiddleware =\n  ({ dispatch, getState }) =>\n  (next) =>\n  (action) => {\n    console.log(action);\n    return next(action);\n  };\n\nconst configureStore = () => {\n  const middlewares = [thunkMiddleware, loggerMiddleware];\n  const enhancer =\n    process.env.NODE_ENV === \"production\"\n      ? compose(applyMiddleware(...middlewares)) // devtool 연결 X\n      : composeWithDevTools(applyMiddleware(...middlewares)); // devtool 연결\n\n  const store = createStore(rootReducer, enhancer);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: process.env.NODE_ENV === \"development\",\n});\n\nexport default wrapper;\n"]},"metadata":{},"sourceType":"module"}