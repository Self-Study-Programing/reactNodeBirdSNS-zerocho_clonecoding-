{"ast":null,"code":"import { all, call, fork, put, takeLatest, delay } from \"@redux-saga/core/effects\";\n\nfunction logInAPI(data) {// return axios.post('/api/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    // const result = yield call(logInAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: \"LOG_IN_SUCCESS\",\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: \"LOG_IN_FAILURE\",\n      data: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {// return axios.post('/api/logout');\n}\n\nfunction* logOut() {\n  try {\n    const result = yield call(logOutAPI);\n    yield put({\n      type: \"LOG_OUT_SUCCESS\",\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: \"LOG_OUT_FAILURE\",\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(\"LOG_IN_REQUEST\", logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(\"LOG_OUT_REQUEST\", logOut);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\n}","map":{"version":3,"sources":["/Users/seonghun/공부/웹/Nextjs/niselj/front/sagas/user.js"],"names":["all","call","fork","put","takeLatest","delay","logInAPI","data","logIn","action","type","err","response","logOutAPI","logOut","result","watchLogIn","watchLogOut","userSaga"],"mappings":"AAAA,SACEA,GADF,EAEEC,IAFF,EAGEC,IAHF,EAIEC,GAJF,EAKEC,UALF,EAMEC,KANF,QAOO,0BAPP;;AASA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB,CACtB;AACD;;AAED,UAAUC,KAAV,CAAgBC,MAAhB,EAAwB;AACtB,MAAI;AACF;AACA,UAAMJ,KAAK,CAAC,IAAD,CAAX;AACA,UAAMF,GAAG,CAAC;AACRO,MAAAA,IAAI,EAAE,gBADE;AAERH,MAAAA,IAAI,EAAEE,MAAM,CAACF;AAFL,KAAD,CAAT;AAID,GAPD,CAOE,OAAOI,GAAP,EAAY;AACZ,UAAMR,GAAG,CAAC;AACRO,MAAAA,IAAI,EAAE,gBADE;AAERH,MAAAA,IAAI,EAAEI,GAAG,CAACC,QAAJ,CAAaL;AAFX,KAAD,CAAT;AAID;AACF;;AAED,SAASM,SAAT,GAAqB,CACnB;AACD;;AAED,UAAUC,MAAV,GAAmB;AACjB,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMd,IAAI,CAACY,SAAD,CAAzB;AACA,UAAMV,GAAG,CAAC;AACRO,MAAAA,IAAI,EAAE,iBADE;AAERH,MAAAA,IAAI,EAAEQ,MAAM,CAACR;AAFL,KAAD,CAAT;AAID,GAND,CAME,OAAOI,GAAP,EAAY;AACZ,UAAMR,GAAG,CAAC;AACRO,MAAAA,IAAI,EAAE,iBADE;AAERH,MAAAA,IAAI,EAAEI,GAAG,CAACC,QAAJ,CAAaL;AAFX,KAAD,CAAT;AAID;AACF;;AAED,UAAUS,UAAV,GAAuB;AACrB,QAAMZ,UAAU,CAAC,gBAAD,EAAmBI,KAAnB,CAAhB;AACD;;AAED,UAAUS,WAAV,GAAwB;AACtB,QAAMb,UAAU,CAAC,iBAAD,EAAoBU,MAApB,CAAhB;AACD;;AAED,eAAe,UAAUI,QAAV,GAAqB;AAClC,QAAMlB,GAAG,CAAC,CAACE,IAAI,CAACc,UAAD,CAAL,EAAmBd,IAAI,CAACe,WAAD,CAAvB,CAAD,CAAT;AACD","sourcesContent":["import {\n  all,\n  call,\n  fork,\n  put,\n  takeLatest,\n  delay,\n} from \"@redux-saga/core/effects\";\n\nfunction logInAPI(data) {\n  // return axios.post('/api/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    // const result = yield call(logInAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: \"LOG_IN_SUCCESS\",\n      data: action.data,\n    });\n  } catch (err) {\n    yield put({\n      type: \"LOG_IN_FAILURE\",\n      data: err.response.data,\n    });\n  }\n}\n\nfunction logOutAPI() {\n  // return axios.post('/api/logout');\n}\n\nfunction* logOut() {\n  try {\n    const result = yield call(logOutAPI);\n    yield put({\n      type: \"LOG_OUT_SUCCESS\",\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: \"LOG_OUT_FAILURE\",\n      data: err.response.data,\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(\"LOG_IN_REQUEST\", logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(\"LOG_OUT_REQUEST\", logOut);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\n}\n"]},"metadata":{},"sourceType":"module"}